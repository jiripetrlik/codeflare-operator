# This workflow will build the CodeFlare Operator image and push it to the project-codeflare image registry

name: Tag and Release
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Tag to be used for operator image'
        required: true
        default: 'v0.0.0-dev'
      replaces:
        description: 'The previous semantic version that this tag replaces.'
        required: true
        default: 'v0.0.0-dev'
      mcad-version:
        description: 'Published version of multi-cluster-app-dispatcher'
        required: true
        default: 'v0.0.0-dev'
      codeflare-sdk-version:
        description: 'Published version of CodeFlare-SDK'
        required: true
        default: 'v0.0.0-dev'
      instascale-version:
        description: 'Published version of InstaScale'
        required: true
        default: 'v0.0.0-dev'
      is-stable:
        description: 'Select if the built image should be tagged as stable'
        required: true
        type: boolean
      quay-organization:
        description: 'Quay organization used to push the built images to'
        required: true
        default: 'project-codeflare'
      community-operators-prod-fork-organization:
        description: 'Owner of forked community-operators-prod repository used to push bundle files to'
        required: true
        default: 'project-codeflare'
      community-operators-prod-organization:
        description: 'Owner of target community-operators-prod repository used to open a PR against'
        required: true
        default: 'redhat-openshift-ecosystem'

jobs:
  push:
    runs-on: ubuntu-latest

    # Permission required to create a release
    permissions:
      contents: write
      pull-requests: write

    env:
      IMAGE_ORG_BASE: quay.io/${{ github.event.inputs.quay-organization }}
      PR_BRANCH_NAME: adjustments-release-${{ github.event.inputs.version }}

    steps:
    - uses: actions/checkout@v3

    - name: Set Go
      uses: actions/setup-go@v3
      with:
        go-version: v1.19

    - name: Verify that release doesn't exist yet
      shell: bash {0}
      run: |
        gh release view ${{ github.event.inputs.version }}
        status=$?
        if [[ $status -eq 0 ]]; then
          echo "Release ${{ github.event.inputs.version }} already exists."
          exit 1
        fi
      env:
        GITHUB_TOKEN: ${{ github.TOKEN }}

    - name: Adjust Compatibility Matrix in readme
      run: |
        sed -i -E "s/(.*CodeFlare Operator.*)v[0-9]+\.[0-9]+\.[0-9]+(.*)v[0-9]+\.[0-9]+\.[0-9]+(.*)/\1${{ github.event.inputs.version }}\2${{ github.event.inputs.version }}\3/" README.md
        sed -i -E "s/(.*Multi-Cluster App Dispatcher.*)v[0-9]+\.[0-9]+\.[0-9]+(.*)v[0-9]+\.[0-9]+\.[0-9]+(.*)/\1${{ github.event.inputs.mcad-version }}\2${{ github.event.inputs.mcad-version }}\3/" README.md
        sed -i -E "s/(.*CodeFlare-SDK.*)v[0-9]+\.[0-9]+\.[0-9]+(.*)v[0-9]+\.[0-9]+\.[0-9]+(.*)/\1${{ github.event.inputs.codeflare-sdk-version }}\2${{ github.event.inputs.codeflare-sdk-version }}\3/" README.md
        sed -i -E "s/(.*InstaScale.*)v[0-9]+\.[0-9]+\.[0-9]+(.*)v[0-9]+\.[0-9]+\.[0-9]+(.*)/\1${{ github.event.inputs.instascale-version }}\2${{ github.event.inputs.instascale-version }}\3/" README.md

    - name: Commit changes in the code back to repository
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: Update dependency versions for release ${{ github.event.inputs.version }}
        file_pattern: 'README.md */defaults.go *.yaml Makefile go.mod go.sum'
        create_branch: true
        branch: ${{ env.PR_BRANCH_NAME }}
